#include <bits/stdc++.h>
typedef long long ll;
const std::string el = "\n";
const std::string yes = "YES";
const std::string no = "NO";
const int MAX = (int)(1e9 + 7);
const int MIN = (int)(-1);
const int DIVISOR = (int)(1e6 + 1);
using namespace std;
 const int N=1e5;
 vector<int> g[N];
 int vis[N];
 int level[N];
 void bfs(int source){
   queue<int> q;
   q.push(source);
   vis[source]=1;
   while(!q.empty()){
    int curr_v=q.front();
    q.pop();
    cout<<curr_v<<" ";
   for(int child: g[curr_v]){
    if(vis[child]!=1){
        q.push(child);
        vis[child]=1;
        level[child]=level[curr_v]+1;
    }
   }
} cout<<endl;
 }

int main(){
   
    int n;
    cin>>n;
     for(int i=0; i<n; i++){
        int x,y;
        cin>>x>>y;
        g[x].push_back(y);
        g[y].push_back(x);
     }
     bfs(1);
     for(int i=1; i<=n; i++){
        cout<<i<<" "<<level[i]<<" ";
     } cout<<endl;

    return 0;
    
}
