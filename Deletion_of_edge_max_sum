#include <bits/stdc++.h>
typedef long long ll;
const std::string el = "\n";
const std::string yes = "YES";
const std::string no = "NO";
const int MAX = (int)(1e9 + 7);
const int MIN = (int)(-1);
const int DIVISOR = (int)(1e6 + 1);
using namespace std;
const int N=1e3;
vector<int> g[N];
int sum[N];
int a[]={10,5,12,6};
long long M=1e9+7;

void dfs (int v, int par){
    sum[v]+=a[v];
    for(int child:g[v]){
        if(child==par) continue;
        dfs(child,v);
        sum[v]+=sum[child];
    }
}

int main(){
   
    int n;
    cin>>n;
     for(int i=0; i<n; i++){
        int x,y;
        cin>>x>>y;
        g[x].push_back(y);
        g[y].push_back(x);
     }
     dfs(1,0);
     long long ans=0;
     for(int i=2; i<=n; i++){
        int p1=sum[i];
        int p2=sum[1]-p1;
        ans=max(ans,(p1*1LL*p2)%M);
     }
     cout<<ans<<endl;

    return 0;
    
}
